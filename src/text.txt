 {/* <div className="flex items-center justify-between">
        <h2 className="mb-4 text-xl font-bold text-blue-900 dark:text-white sm:hidden">
          Category Management
        </h2>
        <Tooltip title="Add category">
          <button
            type="submit"
            onClick={() => onPress({ sl_no: 0 })}
            className="sm:hidden mb-4 inline-flex bg-blue-900 items-center justify-center sm:mr-14 px-5 py-2.5 mt-2 sm:mt-2 text-sm font-medium text-center text-white bg-primary-700 rounded-full h-10 w-10  focus:ring-4 focus:ring-primary-200 dark:focus:ring-primary-900 hover:bg-primary-800"
          >
            <AddIcon />
          </button>
        </Tooltip>
      </div> */}




       //   <div>
  //   {!isReport &&  <ReportForm title={templateData.title} flag={0} onPress={(data) => onPress(data)} outlet={resp} />}
  //   {isReport && <>
  //  <DescriptionComp title={templateData.title} from={from} to={to} location={location?location:'All outlets'} backPress={()=>setIsReport(false)}  headers={templateData.headers} data={dataSet} span={templateData.span} totals={totalPay}/>
  //   <DatatableComp headers={templateData.headers} data={dataSet} span={templateData.span} totals={totalPay}/>
  //   </>
  //   }

  //   </div>


  daybook

  import React, { useEffect, useState } from "react";
import ReportForm from "../../Components/ReportForm";
import useAPI from "../../Hooks/useApi";
import { Message } from "../../Components/Message";
import DatatableComp from "../../Components/DatatableComp";
import DescriptionComp from "../../Components/DescriptionComp";
import { useLocation } from "react-router-dom";
import { reportHeaders } from "../../Assets/Data/TemplateConstants";
import { calculate } from "./Calculations";


function DaybookReport() {
    const {response,callApi} = useAPI();
    const locationpath = useLocation();
    const [resp,setRestp]=useState()
    const [isReport,setIsReport] = useState(false)
    const [isCalled,setCalled] = useState(false)
    const [dataSet,setDataSet] = useState()
    const [from, setFrom] = useState()
    const [to, setTo] = useState()
    const [location,setLocation] = useState()
    const [totalPay,setTotal] = useState()
    var comp,totals=[],net_amt=0, cancelled_amt=0
    var template =locationpath.pathname.split('/')[locationpath.pathname.split('/').length-1]
    var templateData=reportHeaders[template]
    useEffect(()=>{
      console.log(response)
      if(!isCalled)
      setRestp(response?.data?.msg)
      if(response?.data?.suc==0 || response?.data?.msg.length<=0){
        Message('error','No data!')
        setIsReport(false)
       
      }
      else{
        if(isCalled){
          setDataSet(response?.data?.msg)
          totals=calculate(response?.data?.msg,template)
          setTotal(totals)
          setIsReport(true)
  
        }
      }
    },[response])
    useEffect(()=>{
      comp = localStorage.getItem('comp_id')
      callApi('/admin/outlet_list',1,{comp_id:+comp});
  },[])
    
    const onPress = (data) => {
      console.log(data)
      setFrom(data.from_dt)
      setTo(data.to_dt)
      setLocation(resp?.filter(e=>e?.id==data.outlet)[0]?.branch_name)
      comp = localStorage.getItem('comp_id')
      setCalled(true)
      callApi('/admin/daybook_report',1,{from_date: data.from_dt, to_date: data.to_dt,br_id:+data.outlet,comp_id:+comp});
    };
    return (
      <div>
      {!isReport &&  <ReportForm title={templateData.title} flag={0} onPress={(data) => onPress(data)} outlet={resp} />}
      {isReport && <>
      <DescriptionComp title={templateData.title} from={from} to={to} location={location?location:'All outlets'} backPress={()=>setIsReport(false)}  headers={templateData.headers} data={dataSet} span={templateData.span} totals={totalPay}/>
      <DatatableComp headers={templateData.headers} data={dataSet} span={templateData.span} totals={totalPay}/>
      </>
      }
      </div>
    
  )
}


cancelled bill report
import React, { useEffect, useState } from "react";
import ReportForm from "../../Components/ReportForm";
import useAPI from "../../Hooks/useApi";
import { Message } from "../../Components/Message";
import DatatableComp from "../../Components/DatatableComp";
import DescriptionComp from "../../Components/DescriptionComp";
import { useLocation } from "react-router-dom";
import { reportHeaders } from "../../Assets/Data/TemplateConstants";
import { calculate } from "./Calculations";


const {response,callApi} = useAPI();
    const locationpath = useLocation();
    const [resp,setRestp]=useState()
    const [isReport,setIsReport] = useState(false)
    const [isCalled,setCalled] = useState(false)
    const [dataSet,setDataSet] = useState()
    const [from, setFrom] = useState()
    const [to, setTo] = useState()
    const [location,setLocation] = useState()
    const [totalPay,setTotal] = useState()
    var comp,totals=[],net_amt=0,taxable_amt=0,cgst_amt=0,sgst_amt=0,total_tax=0,qty=0,price=0
    var template =locationpath.pathname.split('/')[locationpath.pathname.split('/').length-1]
    var templateData=reportHeaders[template]
    useEffect(()=>{
      console.log(response)
      if(!isCalled)
      setRestp(response?.data?.msg)
      if(response?.data?.suc==0 || response?.data?.msg.length<=0){
        Message('error','No data!')
        setIsReport(false)
       
      }
      else{
        if(isCalled){
          setDataSet(response?.data?.msg)
          totals=calculate(response?.data?.msg,template)
          setTotal(totals)
          setIsReport(true)
  
        }
      }
    },[response])
    useEffect(()=>{
      comp = localStorage.getItem('comp_id')
      callApi('/admin/outlet_list',1,{comp_id:+comp});
  },[])
    
    const onPress = (data) => {
      console.log(data)
      setFrom(data.from_dt)
      setTo(data.to_dt)
      setLocation(resp?.filter(e=>e?.id==data.outlet)[0]?.branch_name)
      comp = localStorage.getItem('comp_id')
      setCalled(true)
      callApi('/admin/cancel_report',1,{from_date: data.from_dt, to_date: data.to_dt,br_id:+data.outlet,comp_id:+comp});
    };
    return (
      <div>
      {!isReport &&  <ReportForm title={templateData.title} flag={0} onPress={(data) => onPress(data)} outlet={resp} />}
      {isReport && <>
        <DescriptionComp title={templateData.title} from={from} to={to} location={location?location:'All outlets'} backPress={()=>setIsReport(false)}  headers={templateData.headers} data={dataSet} span={templateData.span} totals={totalPay}/>
        <DatatableComp headers={templateData.headers} data={dataSet} span={templateData.span} totals={totalPay}/>
      </>
      }
  
      </div>
    );

    itemwise
    import React, { useEffect, useState } from "react";
import ReportForm from "../../Components/ReportForm";
import useAPI from "../../Hooks/useApi";
import { Message } from "../../Components/Message";
import DatatableComp from "../../Components/DatatableComp";
import DescriptionComp from "../../Components/DescriptionComp";
import { reportHeaders } from "../../Assets/Data/TemplateConstants";
import { useLocation } from "react-router-dom";
import { calculate } from "./Calculations";

 const {response,callApi} = useAPI();
    const locationpath = useLocation();
    const [resp,setRestp]=useState()
    const [isReport,setIsReport] = useState(false)
    const [isCalled,setCalled] = useState(false)
    const [dataSet,setDataSet] = useState()
    const [from, setFrom] = useState()
    const [to, setTo] = useState()
    const [location,setLocation] = useState()
    const [item,setItem] = useState()
    const [totalPay,setTotal] = useState()
    var comp,totals=[]
    var template =locationpath.pathname.split('/')[locationpath.pathname.split('/').length-1]
    var templateData=reportHeaders[template]
    useEffect(()=>{
      console.log(response)
      if(!isCalled)
      setRestp(response?.data?.msg)
      if(response?.data?.suc==0 || response?.data?.msg.length<=0){
        Message('error','No data!')
        setIsReport(false)
       
      }
      else{
        if(isCalled){
          setDataSet(response?.data?.msg)
          totals=calculate(response?.data?.msg,template)
          setTotal(totals)
          setIsReport(true)
  
        }
      }
    },[response])
    useEffect(()=>{
      comp = localStorage.getItem('comp_id')
      callApi('/admin/outlet_list',1,{comp_id:+comp});
  },[])
    
    const onPress = (data) => {
      console.log(data)
      setFrom(data.from_dt)
      setTo(data.to_dt)
      setItem(data.item_lst)
      setLocation(resp?.filter(e=>e?.id==data.outlet)[0]?.branch_name)
      comp = localStorage.getItem('comp_id')
      setCalled(true)
      callApi('/admin/item_report',1,{from_date: data.from_dt, to_date: data.to_dt,br_id:+data.outlet,comp_id:+comp});
    };
  return (
    <div>
    {!isReport &&  <ReportForm title={templateData?.title} flag={0} onPress={(data) => onPress(data)} outlet={resp} />}
    {isReport && <>
      <DescriptionComp title={templateData?.title} from={from} to={to} location={location?location:'All outlets'} backPress={()=>setIsReport(false)}  headers={templateData.headers} data={dataSet} span={templateData.span} totals={totalPay}/>
      <DatatableComp headers={templateData.headers} data={dataSet} span={templateData.span} totals={totalPay}/>
    </>
    }
    </div>
  )

  userwise sale report
  import React, { useEffect, useState } from 'react'
import ReportForm from "../../Components/ReportForm";
import useAPI from "../../Hooks/useApi";
import { Message } from "../../Components/Message";
import DatatableComp from "../../Components/DatatableComp";
import DescriptionComp from '../../Components/DescriptionComp';
import { reportHeaders } from "../../Assets/Data/TemplateConstants";
import { useLocation } from "react-router-dom";
import { calculate } from './Calculations';



const {response,callApi} = useAPI();
  const locationpath = useLocation();
  const [resp,setRestp]=useState()
  const [isReport,setIsReport] = useState(false)
  const [isCalled,setCalled] = useState(false)
  const [dataSet,setDataSet] = useState()
  const [from, setFrom] = useState()
  const [to, setTo] = useState()
  const [location,setLocation] = useState()
  const [totalPay,setTotal] = useState()
  var comp,totals=[],initpay=0,no_of_bills=0,can_amt=0;
  var template =locationpath.pathname.split('/')[locationpath.pathname.split('/').length-1]
  var templateData=reportHeaders[template]
  useEffect(()=>{
    console.log(response)
    if(!isCalled)
    setRestp(response?.data?.msg)


    if(response?.data?.suc==0 || response?.data?.msg.length<=0){
      Message('error','No data!')
      setIsReport(false)
     
    }
    else{
      if(isCalled){
        setDataSet(response?.data?.msg)
        setIsReport(true)
        totals=calculate(response?.data?.msg,template)
        setTotal(totals)
      }
    }
  },[response])
  useEffect(()=>{
    comp = localStorage.getItem('comp_id')
    callApi('/admin/outlet_list',1,{comp_id:+comp});
},[])
    const onPress = (data) => {
      console.log(data)
      setFrom(data.from_dt)
      setTo(data.to_dt)
      comp = localStorage.getItem('comp_id')
      setLocation(resp?.filter(e=>e?.id==data.outlet)[0]?.branch_name)
      setCalled(true)

      callApi('/admin/userwise_sale_report',1,{from_date: data.from_dt, to_date: data.to_dt,br_id:+data.outlet,comp_id:+comp});

      };
  return (
    
    <div>
    {!isReport && <ReportForm title={templateData?.title} flag={0} onPress={(data) => onPress(data)} outlet={resp} />}
    {isReport && 
    <>
     <DescriptionComp title={templateData?.title} from={from} to={to} location={location?location:'All outlets'} backPress={()=>setIsReport(false)}  headers={templateData.headers} data={dataSet} span={templateData.span} totals={totalPay}/>
     <DatatableComp headers={templateData.headers} data={dataSet} span={templateData.span} totals={totalPay}/>
    </>
    }

    </div>
  )